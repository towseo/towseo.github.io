{"total":4,"pageSize":10,"pageCount":1,"data":[{"title":"DAY 1 Learning Python","slug":"day2","date":"2021-09-21T16:38:29.000Z","updated":"2021-09-21T16:38:29.400Z","comments":true,"path":"api/articles/day2.json","excerpt":"","keywords":null,"cover":null,"content":"<p>DAY2 【page 23-27】</p>\n<blockquote>\n<p>#practice 1<br>#函数str()将数值转换为字符串</p>\n</blockquote>\n<p>age = 23</p>\n<p>massage = “Happy “ + str(age) + “rd Birthday!”<br>print(massage)</p>\n<blockquote>\n<p>#practice 2<br>#2-9将你最喜欢的数字存储在一个变量中，再使用这个变量创建一条消息，指出你最喜欢的数字，然后将这条消息打印出来。</p>\n</blockquote>\n<p>favorite_number = 8<br>massage_2 = “My favorite number is “ + str(favorite_number) + “.”</p>\n<p>print (massage_2)</p>\n<blockquote>\n<p>#PYTHON 指导原则<br>#”The Zen of Python, by Tim Peters”</p>\n</blockquote>\n<p>#Beautiful is better than ugly.<br>#Explicit is better than implicit.<br>#Simple is better than complex.<br>#Complex is better than complicated.<br>#Flat is better than nested.<br>#Sparse is better than dense.<br>#Readability counts.<br>#Special cases aren’t special enough to break the rules.<br>#Although practicality beats purity.<br>#Errors should never pass silently.<br>#Unless explicitly silenced.<br>#In the face of ambiguity, refuse the temptation to guess.<br>#There should be one– and preferably only one –obvious way to do it.<br>#Although that way may not be obvious at first unless you’re Dutch.<br>#Now is better than never.<br>#Although never is often better than <em>right</em> now.<br>#If the implementation is hard to explain, it’s a bad idea.<br>#If the implementation is easy to explain, it may be a good idea.<br>#Namespaces are one honking great idea – let’s do more of those!</p>\n<blockquote>\n<p>#practice 3<br>#列表打印</p>\n</blockquote>\n<p>bicycles = [‘trek’, ‘cannondale’, ‘redline’, ‘specialized’]</p>\n<p>print(bicycles[0].title())#首字母大写</p>\n<p>print(bicycles[0].upper())#全部大写</p>\n<p>print(bicycles[0].lower())#全部小写</p>\n<p>print(bicycles[1])#索引是从0开始</p>\n<p>print(bicycles[-1])#索引[-1]代表从倒数第1个开始</p>\n<blockquote>\n<p>#practice 4<br>#3-1将一些朋友的姓名存储在一个列表中，并将其命名为names 。依次访问该列表中的每个元素，从而将每个朋友的姓名都打印出来。</p>\n</blockquote>\n<p>print (“3-1”)</p>\n<p>names = [‘charles’, ‘cark’, ‘bill’, ‘vincent’, ‘william’]</p>\n<p>print (names[0].title())</p>\n<p>print (names[1].title())</p>\n<p>print (names[2].title())</p>\n<p>print (names[3].title())</p>\n<p>print (names[4].title())</p>\n<p>#3-2继续使用练习3-1中的列表，但不打印每个朋友的姓名，而为每人打印一条消息。每条消息都包含相同的问候语，但抬头为相应朋友的姓名。</p>\n<p>print (“3-2”)</p>\n<p>names = [‘charles’, ‘cark’, ‘bill’, ‘vincent’, ‘william’]</p>\n<p>massage_2 = “Hello” + names[0].title() + “, nice to meet you!”</p>\n<p>massage_3 = “Hello” + names[1].title() + “, nice to meet you!”</p>\n<p>massage_4 = “Hello” + names[2].title() + “, nice to meet you!”</p>\n<p>massage_5 = “Hello” + names[-2].title() + “, nice to meet you!”</p>\n<p>massage_6 = “Hello” + names[-1].title() + “, nice to meet you!”</p>\n<p>print (massage_2)</p>\n<p>print (massage_3)</p>\n<p>print (massage_4)</p>\n<p>print (massage_5)</p>\n<p>print (massage_6)</p>\n","text":"DAY2 【page 23-27】#practice 1<br>#函数str()将数值转换为字符串age = 23massage = “Happy “ + str(age) + “rd Birthday!”<br>print(massage)#practice 2<br>#2-9","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"DAY 1 Learning Python","slug":"day1","date":"2021-09-21T16:38:26.000Z","updated":"2021-09-21T16:38:26.590Z","comments":true,"path":"api/articles/day1.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"Towseo’s-DAY-1-Learning-Python\"><a href=\"#Towseo’s-DAY-1-Learning-Python\" class=\"headerlink\" title=\"Towseo’s DAY 1 Learning Python\"></a>Towseo’s DAY 1 Learning Python</h2><blockquote>\n<p>DAY 1【page1-22】<br>#practice 1<br>print (“hello world”)</p>\n</blockquote>\n<blockquote>\n<p>#practice 2<br>#引入变量<br>massage = “nice to meet you”</p>\n</blockquote>\n<p>print (massage)</p>\n<blockquote>\n<p>#practice 3<br>massage = “nice to meet you too”</p>\n</blockquote>\n<p>print (massage)</p>\n<p>#practice 4<br>name = “ada lovelace”<br>#单词首字母大写</p>\n<p>print(name.title())<br>#单词字母全部大写</p>\n<p>print(name.upper())<br>#单词字母全部小写</p>\n<p>print(name.lower())</p>\n<blockquote>\n<p>#practice 5<br>#利用【+】拼接<br>first_name = “ada”</p>\n</blockquote>\n<p>last_name = “lovelace”</p>\n<p>full_name = first_name + “ “ + last_name</p>\n<p>print(“Hello, “ + full_name.title() + “!”)</p>\n<blockquote>\n<p>#practice 6<br>first_name = “ada”</p>\n</blockquote>\n<p>last_name = “lovelace”</p>\n<p>full_name = first_name + “ “ + last_name</p>\n<p>message = “Hello, “ + full_name.title() + “!”</p>\n<p>print(message)</p>\n<blockquote>\n<p>#practice 7<br>#制表符【/t】<br>print(“Python”)</p>\n</blockquote>\n<p>print(“\\tPython”)<br>#换行符【/n】</p>\n<p>print(“Languages:\\nPython\\nC\\nJavaScript”)<br>#换行符和制表符同时使用【/n/t】</p>\n<p>print(“Languages:\\n\\tPython\\n\\tC\\n\\tJavaScript”)</p>\n<blockquote>\n<p>#practice 8<br>#函数【rstrip()】去除字符右边的空白<br>favorite_language = ‘ python ‘</p>\n</blockquote>\n<p>print (favorite_language)<br>#输出结果’ python ‘<br>#函数【lstrip()】去除字符右边的空白</p>\n<p>print (favorite_language.rstrip())<br>#输出结果’ python’</p>\n<p>#函数【lstrip()】去除字符左边的空白<br>print (favorite_language.lstrip())<br>#输出结果’python ‘</p>\n<p>#函数【strip()】去除字符两边的空白<br>print (favorite_language.strip())<br>#输出结果’python’</p>\n<blockquote>\n<p>#practice 9<br>#2-3将用户的姓名存到一个变量中，并向该用户显示一条消息。显示的消息应非常简单，如“Hello Eric, would you like to learn some Python today?”。</p>\n</blockquote>\n<p>user_name1 = “Eric”</p>\n<p>massage_1 = “Hello “ + user_name1 +”, would you like to learn some Python today?”</p>\n<p>print (massage_1)</p>\n<p>#2-4调整名字的大小写:将一个人名存储到一个变量中，再以小写、大写和首字母大写的方式显示这个人名。<br>user_name2 = “eRic”</p>\n<p>print (user_name2.title())#首字母大写</p>\n<p>print (user_name2.upper())#大写</p>\n<p>print (user_name2.lower())#小写</p>\n<p>#2-5打印一句名言，类似：Albert Einstein once said, “A person who never made a mistake never tried anything new.”</p>\n<p>massage_2 = “Albert Einstein once said, “A person who never made a mistake never tried anything new.””</p>\n<p>print (massage_2)</p>\n<p>#2-6将名人的姓名存储在变量famous_person 中，再创建要显示的消息，并将其存储在变量message_3 中，然后打印这条消息。<br>famous_person = “Albert Einstein”<br>massage_3 = famous_person +”once said, “A person who never made a mistake never tried anything new.””<br>print (massage_3)</p>\n<p>#2-7剔除人名中的空白,打印这个人名，以显示其开头和末尾的空白。然后，分别使用剔除函数lstrip() 、rstrip() 和strip() 对人名进行处理，并将结果打印出来。<br>name_3 = “ Eric\\n\\tAnna\\nBob “</p>\n<p>print (name_3)</p>\n<p>print (name_3.rstrip())</p>\n<p>print (name_3.lstrip())</p>\n<p>print (name_3.strip())</p>\n","text":"Towseo’s DAY 1 Learning PythonDAY 1【page1-22】<br>#practice 1<br>print (“hello world”)#practice 2<br>#引入变量<br>massage = “nice to meet you”pri","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"First Blog","slug":"first blog","date":"2021-09-20T16:34:40.000Z","updated":"2021-09-20T16:34:40.030Z","comments":true,"path":"api/articles/first blog.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"Towseo’s-Blog\"><a href=\"#Towseo’s-Blog\" class=\"headerlink\" title=\"Towseo’s Blog\"></a>Towseo’s Blog</h2><blockquote>\n<p>命里有时终须有，命里无时莫强求</p>\n</blockquote>\n<center><font face=\"微软雅黑\" color=\"red\" size=\"20\">七律·长征</font></center>\n<center>作者：毛泽东</center>\n\n<center>红军不怕远征难，万水千山只等闲。</center>\n<center>五岭逶迤腾细浪，乌蒙磅礴走泥丸。</center>\n<center>金沙水拍云崖暖，大渡桥横铁索寒。</center>\n<center>更喜岷山千里雪，三军过后尽开颜。</center>\n\n<p>· 红军不怕万里长征路上的一切艰难困苦，把千山万水都看得极为平常。绵延不断的五岭，在红军看来只不过是微波细浪在起伏，气势雄伟的乌蒙山，在红军眼里也不过是一颗泥丸。金沙江浊浪滔天，拍击着高耸入云的峭壁悬崖，给人温暖的感受。大渡河险桥横架，晃动着凌空高悬的根根铁索，使人感到深深的寒意。更加令人喜悦的是踏上千里积雪的岷山，红军翻越过去以后个个笑逐颜开。</p>\n","text":"Towseo’s Blog命里有时终须有，命里无时莫强求七律·长征作者：毛泽东红军不怕远征难，万水千山只等闲。五岭逶迤腾细浪，乌蒙磅礴走泥丸。金沙水拍云崖暖，大渡桥横铁索寒。更喜岷山千里雪，三军过后尽开颜。· 红军不怕万里长征路上的一切艰难困苦，把千山万水都看得极为平常。绵延不断","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"TODAY LIFE","slug":"today life","date":"2021-09-13T17:05:26.000Z","updated":"2021-09-13T17:05:26.850Z","comments":true,"path":"api/articles/today life.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"Towseo’s-today-life\"><a href=\"#Towseo’s-today-life\" class=\"headerlink\" title=\"Towseo’s today life\"></a>Towseo’s today life</h2><blockquote>\n<p>A great weekday！</p>\n</blockquote>\n<center><font face=\"微软雅黑\" color=\"red\" size=\"20\">HAPPY</font></center>\n","text":"Towseo’s today lifeA great weekday！HAPPY","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}