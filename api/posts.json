{"total":4,"pageSize":10,"pageCount":1,"data":[{"title":"TODAY LIFE","slug":"today life","date":"2021-09-21T17:13:13.000Z","updated":"2021-09-21T17:13:13.600Z","comments":true,"path":"api/articles/today life.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"Towseo’s-today-life\"><a href=\"#Towseo’s-today-life\" class=\"headerlink\" title=\"Towseo’s today life\"></a>Towseo’s today life</h2><blockquote>\n<p>A great weekday！</p>\n</blockquote>\n<center><font face=\"微软雅黑\" color=\"blue\" size=\"14\">HAPPY</font></center>\n","text":"Towseo’s today lifeA great weekday！HAPPY","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"First Blog","slug":"first blog","date":"2021-09-21T17:13:11.000Z","updated":"2021-09-21T17:13:11.780Z","comments":true,"path":"api/articles/first blog.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"Towseo’s-Blog\"><a href=\"#Towseo’s-Blog\" class=\"headerlink\" title=\"Towseo’s Blog\"></a>Towseo’s Blog</h2><blockquote>\n<p>命里有时终须有，命里无时莫强求</p>\n</blockquote>\n<center><font face=\"微软雅黑\" color=\"red\" size=\"14\">七律·长征</font></center>\n<center>作者：毛泽东</center>\n\n<center>红军不怕远征难，万水千山只等闲。</center>\n<center>五岭逶迤腾细浪，乌蒙磅礴走泥丸。</center>\n<center>金沙水拍云崖暖，大渡桥横铁索寒。</center>\n<center>更喜岷山千里雪，三军过后尽开颜。</center>\n\n<p>· 红军不怕万里长征路上的一切艰难困苦，把千山万水都看得极为平常。绵延不断的五岭，在红军看来只不过是微波细浪在起伏，气势雄伟的乌蒙山，在红军眼里也不过是一颗泥丸。金沙江浊浪滔天，拍击着高耸入云的峭壁悬崖，给人温暖的感受。大渡河险桥横架，晃动着凌空高悬的根根铁索，使人感到深深的寒意。更加令人喜悦的是踏上千里积雪的岷山，红军翻越过去以后个个笑逐颜开。</p>\n","text":"Towseo’s Blog命里有时终须有，命里无时莫强求七律·长征作者：毛泽东红军不怕远征难，万水千山只等闲。五岭逶迤腾细浪，乌蒙磅礴走泥丸。金沙水拍云崖暖，大渡桥横铁索寒。更喜岷山千里雪，三军过后尽开颜。· 红军不怕万里长征路上的一切艰难困苦，把千山万水都看得极为平常。绵延不断","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"DAY 2 Learning Python","slug":"day2","date":"2021-09-21T17:12:11.000Z","updated":"2021-09-21T17:12:11.970Z","comments":true,"path":"api/articles/day2.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Towseo’s-DAY-2-Learning-Python\"><a href=\"#Towseo’s-DAY-2-Learning-Python\" class=\"headerlink\" title=\"Towseo’s DAY 2 Learning Python\"></a>Towseo’s DAY 2 Learning Python</h1><h2 id=\"DAY2-【page-23-27】\"><a href=\"#DAY2-【page-23-27】\" class=\"headerlink\" title=\"DAY2 【page 23-27】\"></a>DAY2 【page 23-27】</h2><blockquote>\n<p>#practice 1</p>\n</blockquote>\n<pre><code>#函数str()将数值转换为字符串\nage = 23\nmassage = &quot;Happy &quot; + str(age) + &quot;rd Birthday!&quot;\nprint(massage)\n</code></pre>\n<blockquote>\n<p>#practice 2</p>\n</blockquote>\n<p>#2-9将你最喜欢的数字存储在一个变量中，再使用这个变量创建一条消息，指出你最喜欢的数字，然后将这条消息打印出来。</p>\n<pre><code>favorite_number = 8\nmassage_2 = &quot;My favorite number is &quot; + str(favorite_number) + &quot;.&quot;\nprint (massage_2)\n</code></pre>\n<blockquote>\n<p>#PYTHON 指导原则</p>\n</blockquote>\n<p>1.”The Zen of Python, by Tim Peters”</p>\n<p>2.Beautiful is better than ugly.</p>\n<p>3.Explicit is better than implicit.</p>\n<p>4.Simple is better than complex.</p>\n<p>5.Complex is better than complicated.</p>\n<p>6.Flat is better than nested.</p>\n<p>7.Sparse is better than dense.</p>\n<p>8.Readability counts.</p>\n<p>9.Special cases aren’t special enough to break the rules.</p>\n<p>10.Although practicality beats purity.</p>\n<p>11.Errors should never pass silently.</p>\n<p>12.Unless explicitly silenced.</p>\n<p>13.In the face of ambiguity, refuse the temptation to guess.</p>\n<p>14.There should be one– and preferably only one –obvious way to do it.</p>\n<p>15.Although that way may not be obvious at first unless you’re Dutch.</p>\n<p>16.Now is better than never.</p>\n<p>17.Although never is often better than <em>right</em> now.</p>\n<p>18.If the implementation is hard to explain, it’s a bad idea.</p>\n<p>19.If the implementation is easy to explain, it may be a good idea.</p>\n<p>20.Namespaces are one honking great idea – let’s do more of those!</p>\n<blockquote>\n<p>#practice 3</p>\n</blockquote>\n<pre><code>#列表打印\nbicycles = [&#39;trek&#39;, &#39;cannondale&#39;, &#39;redline&#39;, &#39;specialized&#39;]\nprint(bicycles[0].title())#首字母大写\nprint(bicycles[0].upper())#全部大写\nprint(bicycles[0].lower())#全部小写\nprint(bicycles[1])#索引是从0开始\nprint(bicycles[-1])#索引[-1]代表从倒数第1个开始\n</code></pre>\n<blockquote>\n<p>#practice 4</p>\n</blockquote>\n<p>#3-1将一些朋友的姓名存储在一个列表中，并将其命名为names 。依次访问该列表中的每个元素，从而将每个朋友的姓名都打印出来。</p>\n<pre><code>print (&quot;3-1&quot;)\nnames = [&#39;charles&#39;, &#39;cark&#39;, &#39;bill&#39;, &#39;vincent&#39;, &#39;william&#39;]\nprint (names[0].title())\nprint (names[1].title())\nprint (names[2].title())\nprint (names[3].title())\nprint (names[4].title())\n</code></pre>\n<p>#3-2继续使用练习3-1中的列表，但不打印每个朋友的姓名，而为每人打印一条消息。每条消息都包含相同的问候语，但抬头为相应朋友的姓名。</p>\n<pre><code>print (&quot;3-2&quot;)\nnames = [&#39;charles&#39;, &#39;cark&#39;, &#39;bill&#39;, &#39;vincent&#39;, &#39;william&#39;]\nmassage_2 = &quot;Hello&quot; + names[0].title() + &quot;, nice to meet you!&quot;\nmassage_3 = &quot;Hello&quot; + names[1].title() + &quot;, nice to meet you!&quot;\nmassage_4 = &quot;Hello&quot; + names[2].title() + &quot;, nice to meet you!&quot;\nmassage_5 = &quot;Hello&quot; + names[-2].title() + &quot;, nice to meet you!&quot;\nmassage_6 = &quot;Hello&quot; + names[-1].title() + &quot;, nice to meet you!&quot;\nprint (massage_2)\nprint (massage_3)\nprint (massage_4)\nprint (massage_5)\nprint (massage_6)\n</code></pre>\n","text":"Towseo’s DAY 2 Learning PythonDAY2 【page 23-27】#practice 1#函数str()将数值转换为字符串age = 23massage = &quot;Happy &quot; + str(age) + &quot;rd Birthd","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"DAY 1 Learning Python","slug":"day1","date":"2021-09-21T17:08:59.000Z","updated":"2021-09-21T17:08:59.010Z","comments":true,"path":"api/articles/day1.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Towseo’s-DAY-1-Learning-Python\"><a href=\"#Towseo’s-DAY-1-Learning-Python\" class=\"headerlink\" title=\"Towseo’s DAY 1 Learning Python\"></a>Towseo’s DAY 1 Learning Python</h1><h2 id=\"DAY-1【page1-22】\"><a href=\"#DAY-1【page1-22】\" class=\"headerlink\" title=\"DAY 1【page1-22】\"></a>DAY 1【page1-22】</h2><blockquote>\n<p>#practice 1</p>\n</blockquote>\n<pre><code>print (&quot;hello world&quot;)\n</code></pre>\n<blockquote>\n<p>#practice 2</p>\n</blockquote>\n<pre><code>#引入变量\nmassage = &quot;nice to meet you&quot;\nprint (massage)\n</code></pre>\n<blockquote>\n<p>#practice 3</p>\n</blockquote>\n<pre><code>massage = &quot;nice to meet you too&quot;\nprint (massage)\n</code></pre>\n<blockquote>\n<p>#practice 4</p>\n</blockquote>\n<pre><code>name = &quot;ada lovelace&quot;\n#单词首字母大写\nprint(name.title())\n#单词字母全部大写\nprint(name.upper())\n#单词字母全部小写\nprint(name.lower())\n</code></pre>\n<blockquote>\n<p>#practice 5</p>\n</blockquote>\n<pre><code>#利用【+】拼接\nfirst_name = &quot;ada&quot;\nlast_name = &quot;lovelace&quot;\nfull_name = first_name + &quot; &quot; + last_name\nprint(&quot;Hello, &quot; + full_name.title() + &quot;!&quot;)\n</code></pre>\n<blockquote>\n<p>#practice 6</p>\n</blockquote>\n<pre><code>first_name = &quot;ada&quot;\nlast_name = &quot;lovelace&quot;\nfull_name = first_name + &quot; &quot; + last_name\nmessage = &quot;Hello, &quot; + full_name.title() + &quot;!&quot;\nprint(message)\n</code></pre>\n<blockquote>\n<p>#practice 7</p>\n</blockquote>\n<pre><code>#制表符【/t】\nprint(&quot;Python&quot;)\nprint(&quot;\\tPython&quot;)\n</code></pre>\n<p>#换行符【/n】</p>\n<pre><code>print(&quot;Languages:\\nPython\\nC\\nJavaScript&quot;)\n#换行符和制表符同时使用【/n/t】\nprint(&quot;Languages:\\n\\tPython\\n\\tC\\n\\tJavaScript&quot;)\n</code></pre>\n<blockquote>\n<p>#practice 8</p>\n</blockquote>\n<pre><code>#函数【rstrip()】去除字符右边的空白\nfavorite_language = &#39; python &#39;\nprint (favorite_language)\n#输出结果&#39; python &#39;\n\n#函数【lstrip()】去除字符右边的空白\nprint (favorite_language.rstrip())\n#输出结果&#39; python&#39;\n\n#函数【lstrip()】去除字符左边的空白\nprint (favorite_language.lstrip())\n#输出结果&#39;python &#39;\n\n#函数【strip()】去除字符两边的空白\nprint (favorite_language.strip())\n#输出结果&#39;python&#39;\n</code></pre>\n<blockquote>\n<p>#practice 9</p>\n</blockquote>\n<p>#2-3将用户的姓名存到一个变量中，并向该用户显示一条消息。显示的消息应非常简单，如“Hello Eric, would you like to learn some Python today?”。</p>\n<pre><code>user_name1 = &quot;Eric&quot;\nmassage_1 = &quot;Hello &quot; + user_name1 +&quot;, would you like to learn some Python today?&quot;\nprint (massage_1)\n</code></pre>\n<p>#2-4调整名字的大小写:将一个人名存储到一个变量中，再以小写、大写和首字母大写的方式显示这个人名。</p>\n<pre><code>user_name2 = &quot;eRic&quot;\nprint (user_name2.title())#首字母大写\nprint (user_name2.upper())#大写\nprint (user_name2.lower())#小写\n</code></pre>\n<p>#2-5打印一句名言，类似：Albert Einstein once said, “A person who never made a mistake never tried anything new.”</p>\n<pre><code>massage_2 = &quot;Albert Einstein once said, “A person who never made a mistake never tried anything new.”&quot;\nprint (massage_2)\n</code></pre>\n<p>#2-6将名人的姓名存储在变量famous_person 中，再创建要显示的消息，并将其存储在变量message_3 中，然后打印这条消息。</p>\n<pre><code>famous_person = &quot;Albert Einstein&quot;\nmassage_3 = famous_person +&quot;once said, “A person who never made a mistake never tried anything new.”&quot;\nprint (massage_3)\n</code></pre>\n<p>#2-7剔除人名中的空白,打印这个人名，以显示其开头和末尾的空白。然后，分别使用剔除函数lstrip() 、rstrip() 和strip() 对人名进行处理，并将结果打印出来。</p>\n<pre><code>name_3 = &quot; Eric\\n\\tAnna\\nBob &quot;\nprint (name_3)\nprint (name_3.rstrip())\nprint (name_3.lstrip())\nprint (name_3.strip())\n</code></pre>\n","text":"Towseo’s DAY 1 Learning PythonDAY 1【page1-22】#practice 1print (&quot;hello world&quot;)#practice 2#引入变量massage = &quot;nice to meet you&quot","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}